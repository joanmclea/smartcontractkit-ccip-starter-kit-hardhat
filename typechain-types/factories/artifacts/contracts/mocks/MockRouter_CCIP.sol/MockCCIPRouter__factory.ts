/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MockCCIPRouter,
  MockCCIPRouterInterface,
} from "../../../../../artifacts/contracts/mocks/MockRouter_CCIP.sol/MockCCIPRouter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFeeTokenAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraArgsTag",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOffRamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "UnsupportedDestinationChain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offRamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_FOR_CALL_EXACT_CHECK",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "gasForCallExactCheck",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "routeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200007d6040518060600160405280602581526020016200272560259139306200008360201b60201c565b620002d5565b6200012582826040516024016200009c92919062000272565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012960201b60201c565b5050565b6200014f816200014a6200015260201b62000649176200017360201b60201c565b60201c565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6200018760201b62000dea17819050919050565b62000191620002a6565b565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001cf578082015181840152602081019050620001b2565b60008484015250505050565b6000601f19601f8301169050919050565b6000620001f98262000193565b6200020581856200019e565b935062000217818560208601620001af565b6200022281620001db565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200025a826200022d565b9050919050565b6200026c816200024d565b82525050565b600060408201905081810360008301526200028e8185620001ec565b90506200029f602083018462000261565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fd5b61244080620002e56000396000f3fe60806040526004361061007b5760003560e01c8063a48a90581161004e578063a48a905814610157578063d6be695a14610194578063ee18e0d3146101bf578063fbca3b74146101ea5761007b565b806320487ded146100805780633cf97983146100bd5780637a8062ee146100fc57806396f4e9f914610127575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190611253565b610227565b6040516100b491906112be565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190611337565b61022f565b6040516100f393929190611454565b60405180910390f35b34801561010857600080fd5b5061011161025a565b60405161011e91906114a1565b60405180910390f35b610141600480360381019061013c91906114db565b61027e565b60405161014e9190611550565b60405180910390f35b34801561016357600080fd5b5061017e6004803603810190610179919061156b565b6105de565b60405161018b9190611598565b60405180910390f35b3480156101a057600080fd5b506101a96105e9565b6040516101b691906115c2565b60405180910390f35b3480156101cb57600080fd5b506101d46105f0565b6040516101e191906115ec565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c919061156b565b6105f6565b60405161021e91906116c5565b60405180910390f35b600092915050565b60006060600061024a87610242906117f3565b87878761066a565b9250925092509450945094915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060208280600001906102929190611815565b9050146102e6578180600001906102a99190611815565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016102dd9291906118a5565b60405180910390fd5b60008280600001906102f89190611815565b81019061030591906118c9565b905073ffffffffffffffffffffffffffffffffffffffff801681118061032b5750600a81105b1561037d578280600001906103409190611815565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016103749291906118a5565b60405180910390fd5b6000819050600061039c8580608001906103979190611815565b61075a565b6000015190506000856040516020016103b59190611be8565b60405160208183030381529060405280519060200120905060006040518060a00160405280838152602001600067ffffffffffffffff1681526020013360405160200161040291906114a1565b60405160208183030381529060405281526020018880602001906104269190611815565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200188806040019061047e9190611c0a565b808060200260200160405190810160405280939291908181526020016000905b828210156104ce578484839050604002018036038101906104bf9190611c6d565b8152602001906001019061049e565b5050505050815250905060005b8780604001906104eb9190611c0a565b90508110156105945761058333868a80604001906105099190611c0a565b8581811061051a57610519611c9a565b5b905060400201602001358b80604001906105349190611c0a565b8681811061054557610544611c9a565b5b905060400201600001602081019061055d9190611cc9565b73ffffffffffffffffffffffffffffffffffffffff16610843909392919063ffffffff16565b8061058d90611d25565b90506104db565b506105a381611388858761066a565b5050506105c76040518060600160405280602481526020016123e7602491396108cc565b6105d082610965565b819550505050505092915050565b600060019050919050565b62030d4081565b61138881565b6060600067ffffffffffffffff81111561061357610612610e71565b5b6040519080825280602002602001820160405280156106415781602001602082028036833780820191505090505b509050919050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060606000806385572ffb60e01b8860405160240161068a9190611f15565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506106f78186888a60846109fe565b8094508195508296505050507f9b877de93ea9895756e337442c657f95a34fc68e7eb988bdfa693d5be83016b6886000015189602001513384805190602001206040516107479493929190611f37565b60405180910390a1509450945094915050565b610762610df4565b6000838390500361079057604051806020016040528062030d4067ffffffffffffffff16815250905061083d565b6397a657c960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168383906107c49190611fc0565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461081a576040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282600490809261082d93929190612029565b81019061083a91906120a0565b90505b92915050565b6108c6846323b872dd60e01b858585604051602401610864939291906120cd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b31565b50505050565b610962816040516024016108e09190612159565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bf8565b50565b6109fb816040516024016109799190611550565b6040516020818303038152906040527f27b7cf85000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bf8565b50565b6000606060008361ffff1667ffffffffffffffff811115610a2257610a21610e71565b5b6040519080825280601f01601f191660200182016040528015610a545781602001600182028036833780820191505090505b509150863b610a87577f0c3b563c0000000000000000000000000000000000000000000000000000000060005260046000fd5b5a85811015610aba577fafa32a2c0000000000000000000000000000000000000000000000000000000060005260046000fd5b85810390508660408204820311610af5577f37c3be290000000000000000000000000000000000000000000000000000000060005260046000fd5b5a6000808b5160208d0160008d8df194505a810392503d86811115610b18578690505b808552806000602087013e505050955095509592505050565b6000610b93826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c129092919063ffffffff16565b9050600081511115610bf35780806020019051810190610bb391906121a7565b610bf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990612246565b60405180910390fd5b5b505050565b610c0f81610c07610649610c2a565b63ffffffff16565b50565b6060610c218484600085610c35565b90509392505050565b610dea819050919050565b606082471015610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c71906122d8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ca39190612334565b60006040518083038185875af1925050503d8060008114610ce0576040519150601f19603f3d011682016040523d82523d6000602084013e610ce5565b606091505b5091509150610cf687838387610d02565b92505050949350505050565b60608315610d64576000835103610d5c57610d1c85610d77565b610d5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5290612397565b60405180910390fd5b5b829050610d6f565b610d6e8383610d9a565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610dad5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de19190612159565b60405180910390fd5b610df26123b7565b565b6040518060200160405280600081525090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b610e3881610e1b565b8114610e4357600080fd5b50565b600081359050610e5581610e2f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ea982610e60565b810181811067ffffffffffffffff82111715610ec857610ec7610e71565b5b80604052505050565b6000610edb610e07565b9050610ee78282610ea0565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610f1657610f15610e71565b5b610f1f82610e60565b9050602081019050919050565b82818337600083830152505050565b6000610f4e610f4984610efb565b610ed1565b905082815260208101848484011115610f6a57610f69610ef6565b5b610f75848285610f2c565b509392505050565b600082601f830112610f9257610f91610ef1565b5b8135610fa2848260208601610f3b565b91505092915050565b600067ffffffffffffffff821115610fc657610fc5610e71565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100782610fdc565b9050919050565b61101781610ffc565b811461102257600080fd5b50565b6000813590506110348161100e565b92915050565b6000819050919050565b61104d8161103a565b811461105857600080fd5b50565b60008135905061106a81611044565b92915050565b60006040828403121561108657611085610e5b565b5b6110906040610ed1565b905060006110a084828501611025565b60008301525060206110b48482850161105b565b60208301525092915050565b60006110d36110ce84610fab565b610ed1565b905080838252602082019050604084028301858111156110f6576110f5610fd7565b5b835b8181101561111f578061110b8882611070565b8452602084019350506040810190506110f8565b5050509392505050565b600082601f83011261113e5761113d610ef1565b5b813561114e8482602086016110c0565b91505092915050565b600060a0828403121561116d5761116c610e5b565b5b61117760a0610ed1565b9050600082013567ffffffffffffffff81111561119757611196610eec565b5b6111a384828501610f7d565b600083015250602082013567ffffffffffffffff8111156111c7576111c6610eec565b5b6111d384828501610f7d565b602083015250604082013567ffffffffffffffff8111156111f7576111f6610eec565b5b61120384828501611129565b604083015250606061121784828501611025565b606083015250608082013567ffffffffffffffff81111561123b5761123a610eec565b5b61124784828501610f7d565b60808301525092915050565b6000806040838503121561126a57611269610e11565b5b600061127885828601610e46565b925050602083013567ffffffffffffffff81111561129957611298610e16565b5b6112a585828601611157565b9150509250929050565b6112b88161103a565b82525050565b60006020820190506112d360008301846112af565b92915050565b600080fd5b600060a082840312156112f4576112f36112d9565b5b81905092915050565b600061ffff82169050919050565b611314816112fd565b811461131f57600080fd5b50565b6000813590506113318161130b565b92915050565b6000806000806080858703121561135157611350610e11565b5b600085013567ffffffffffffffff81111561136f5761136e610e16565b5b61137b878288016112de565b945050602061138c87828801611322565b935050604061139d8782880161105b565b92505060606113ae87828801611025565b91505092959194509250565b60008115159050919050565b6113cf816113ba565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561140f5780820151818401526020810190506113f4565b60008484015250505050565b6000611426826113d5565b61143081856113e0565b93506114408185602086016113f1565b61144981610e60565b840191505092915050565b600060608201905061146960008301866113c6565b818103602083015261147b818561141b565b905061148a60408301846112af565b949350505050565b61149b81610ffc565b82525050565b60006020820190506114b66000830184611492565b92915050565b600060a082840312156114d2576114d16112d9565b5b81905092915050565b600080604083850312156114f2576114f1610e11565b5b600061150085828601610e46565b925050602083013567ffffffffffffffff81111561152157611520610e16565b5b61152d858286016114bc565b9150509250929050565b6000819050919050565b61154a81611537565b82525050565b60006020820190506115656000830184611541565b92915050565b60006020828403121561158157611580610e11565b5b600061158f84828501610e46565b91505092915050565b60006020820190506115ad60008301846113c6565b92915050565b6115bc81610e1b565b82525050565b60006020820190506115d760008301846115b3565b92915050565b6115e6816112fd565b82525050565b600060208201905061160160008301846115dd565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61163c81610ffc565b82525050565b600061164e8383611633565b60208301905092915050565b6000602082019050919050565b600061167282611607565b61167c8185611612565b935061168783611623565b8060005b838110156116b857815161169f8882611642565b97506116aa8361165a565b92505060018101905061168b565b5085935050505092915050565b600060208201905081810360008301526116df8184611667565b905092915050565b6116f081611537565b81146116fb57600080fd5b50565b60008135905061170d816116e7565b92915050565b600060a0828403121561172957611728610e5b565b5b61173360a0610ed1565b90506000611743848285016116fe565b600083015250602061175784828501610e46565b602083015250604082013567ffffffffffffffff81111561177b5761177a610eec565b5b61178784828501610f7d565b604083015250606082013567ffffffffffffffff8111156117ab576117aa610eec565b5b6117b784828501610f7d565b606083015250608082013567ffffffffffffffff8111156117db576117da610eec565b5b6117e784828501611129565b60808301525092915050565b60006117ff3683611713565b9050919050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261183257611831611806565b5b80840192508235915067ffffffffffffffff8211156118545761185361180b565b5b6020830192506001820236038313156118705761186f611810565b5b509250929050565b600061188483856113e0565b9350611891838584610f2c565b61189a83610e60565b840190509392505050565b600060208201905081810360008301526118c0818486611878565b90509392505050565b6000602082840312156118df576118de610e11565b5b60006118ed8482850161105b565b91505092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261192257611921611900565b5b83810192508235915060208301925067ffffffffffffffff82111561194a576119496118f6565b5b6001820236038313156119605761195f6118fb565b5b509250929050565b600082825260208201905092915050565b60006119858385611968565b9350611992838584610f2c565b61199b83610e60565b840190509392505050565b600080833560016020038436030381126119c3576119c2611900565b5b83810192508235915060208301925067ffffffffffffffff8211156119eb576119ea6118f6565b5b604082023603831315611a0157611a006118fb565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6000611a336020840184611025565b905092915050565b6000611a4a602084018461105b565b905092915050565b611a5b8161103a565b82525050565b60408201611a726000830183611a24565b611a7f6000850182611633565b50611a8d6020830183611a3b565b611a9a6020850182611a52565b50505050565b6000611aac8383611a61565b60408301905092915050565b600082905092915050565b6000604082019050919050565b6000611adc8385611a09565b9350611ae782611a1a565b8060005b85811015611b2057611afd8284611ab8565b611b078882611aa0565b9750611b1283611ac3565b925050600181019050611aeb565b5085925050509392505050565b600060a08301611b406000840184611905565b8583036000870152611b53838284611979565b92505050611b646020840184611905565b8583036020870152611b77838284611979565b92505050611b8860408401846119a6565b8583036040870152611b9b838284611ad0565b92505050611bac6060840184611a24565b611bb96060860182611633565b50611bc76080840184611905565b8583036080870152611bda838284611979565b925050508091505092915050565b60006020820190508181036000830152611c028184611b2d565b905092915050565b60008083356001602003843603038112611c2757611c26611806565b5b80840192508235915067ffffffffffffffff821115611c4957611c4861180b565b5b602083019250604082023603831315611c6557611c64611810565b5b509250929050565b600060408284031215611c8357611c82610e11565b5b6000611c9184828501611070565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611cdf57611cde610e11565b5b6000611ced84828501611025565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d308261103a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d6257611d61611cf6565b5b600182019050919050565b611d7681611537565b82525050565b611d8581610e1b565b82525050565b6000611d96826113d5565b611da08185611968565b9350611db08185602086016113f1565b611db981610e60565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b604082016000820151611df56000850182611633565b506020820151611e086020850182611a52565b50505050565b6000611e1a8383611ddf565b60408301905092915050565b6000602082019050919050565b6000611e3e82611dc4565b611e488185611a09565b9350611e5383611dcf565b8060005b83811015611e84578151611e6b8882611e0e565b9750611e7683611e26565b925050600181019050611e57565b5085935050505092915050565b600060a083016000830151611ea96000860182611d6d565b506020830151611ebc6020860182611d7c565b5060408301518482036040860152611ed48282611d8b565b91505060608301518482036060860152611eee8282611d8b565b91505060808301518482036080860152611f088282611e33565b9150508091505092915050565b60006020820190508181036000830152611f2f8184611e91565b905092915050565b6000608082019050611f4c6000830187611541565b611f5960208301866115b3565b611f666040830185611492565b611f736060830184611541565b95945050505050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600082821b905092915050565b6000611fcc8383611f7c565b82611fd78135611f87565b92506004821015612017576120127fffffffff0000000000000000000000000000000000000000000000000000000083600403600802611fb3565b831692505b505092915050565b600080fd5b600080fd5b6000808585111561203d5761203c61201f565b5b8386111561204e5761204d612024565b5b6001850283019150848603905094509492505050565b60006020828403121561207a57612079610e5b565b5b6120846020610ed1565b905060006120948482850161105b565b60008301525092915050565b6000602082840312156120b6576120b5610e11565b5b60006120c484828501612064565b91505092915050565b60006060820190506120e26000830186611492565b6120ef6020830185611492565b6120fc60408301846112af565b949350505050565b600081519050919050565b600082825260208201905092915050565b600061212b82612104565b612135818561210f565b93506121458185602086016113f1565b61214e81610e60565b840191505092915050565b600060208201905081810360008301526121738184612120565b905092915050565b612184816113ba565b811461218f57600080fd5b50565b6000815190506121a18161217b565b92915050565b6000602082840312156121bd576121bc610e11565b5b60006121cb84828501612192565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612230602a8361210f565b915061223b826121d4565b604082019050919050565b6000602082019050818103600083015261225f81612223565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006122c260268361210f565b91506122cd82612266565b604082019050919050565b600060208201905081810360008301526122f1816122b5565b9050919050565b600081905092915050565b600061230e826113d5565b61231881856122f8565b93506123288185602086016113f1565b80840191505092915050565b60006123408284612303565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612381601d8361210f565b915061238c8261234b565b602082019050919050565b600060208201905081810360008301526123b081612374565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe4445563a20206363697053656e6428292063616c6c65642077697468206d736749643a20a2646970667358221220995545dead37ac2ce3d4ca3b92eded127bf629d97c61e61378b5c4fcd93cf1c264736f6c634300081300335a5542494e3a204d6f636b43434950526f75746572206465706c6f79656420746f20257320";

type MockCCIPRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCCIPRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCCIPRouter__factory extends ContractFactory {
  constructor(...args: MockCCIPRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockCCIPRouter> {
    return super.deploy(overrides || {}) as Promise<MockCCIPRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockCCIPRouter {
    return super.attach(address) as MockCCIPRouter;
  }
  override connect(signer: Signer): MockCCIPRouter__factory {
    return super.connect(signer) as MockCCIPRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCCIPRouterInterface {
    return new utils.Interface(_abi) as MockCCIPRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCCIPRouter {
    return new Contract(address, _abi, signerOrProvider) as MockCCIPRouter;
  }
}
