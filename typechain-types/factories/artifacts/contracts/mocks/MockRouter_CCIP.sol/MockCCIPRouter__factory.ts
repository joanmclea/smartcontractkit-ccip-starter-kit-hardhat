/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MockCCIPRouter,
  MockCCIPRouterInterface,
} from "../../../../../artifacts/contracts/mocks/MockRouter_CCIP.sol/MockCCIPRouter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFeeTokenAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraArgsTag",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOffRamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "UnsupportedDestinationChain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offRamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_FOR_CALL_EXACT_CHECK",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "gasForCallExactCheck",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "routeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "retBytes",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061233f806100606000396000f3fe60806040526004361061007b5760003560e01c8063a48a90581161004e578063a48a905814610157578063d6be695a14610194578063ee18e0d3146101bf578063fbca3b74146101ea5761007b565b806320487ded146100805780633cf97983146100bd5780637a8062ee146100fc57806396f4e9f914610127575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190611152565b610227565b6040516100b491906111bd565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190611236565b61022f565b6040516100f393929190611353565b60405180910390f35b34801561010857600080fd5b50610111610259565b60405161011e91906113a0565b60405180910390f35b610141600480360381019061013c91906113da565b61027d565b60405161014e919061144f565b60405180910390f35b34801561016357600080fd5b5061017e6004803603810190610179919061146a565b6105dc565b60405161018b9190611497565b60405180910390f35b3480156101a057600080fd5b506101a96105e7565b6040516101b691906114c1565b60405180910390f35b3480156101cb57600080fd5b506101d46105ee565b6040516101e191906114eb565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c919061146a565b6105f4565b60405161021e91906115c4565b60405180910390f35b600092915050565b60006060600061024a87610242906116f2565b878787610647565b50809350509450945094915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060208280600001906102919190611714565b9050146102e5578180600001906102a89190611714565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016102dc9291906117a4565b60405180910390fd5b60008280600001906102f79190611714565b81019061030491906117c8565b905073ffffffffffffffffffffffffffffffffffffffff801681118061032a5750600a81105b1561037c5782806000019061033f9190611714565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016103739291906117a4565b60405180910390fd5b6000819050600061039b8580608001906103969190611714565b61072e565b6000015190506000856040516020016103b49190611ae7565b60405160208183030381529060405280519060200120905060006040518060a00160405280838152602001600067ffffffffffffffff1681526020013360405160200161040191906113a0565b60405160208183030381529060405281526020018880602001906104259190611714565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200188806040019061047d9190611b09565b808060200260200160405190810160405280939291908181526020016000905b828210156104cd578484839050604002018036038101906104be9190611b6c565b8152602001906001019061049d565b5050505050815250905060005b8780604001906104ea9190611b09565b90508110156105935761058233868a80604001906105089190611b09565b8581811061051957610518611b99565b5b905060400201602001358b80604001906105339190611b09565b8681811061054457610543611b99565b5b905060400201600001602081019061055c9190611bc8565b73ffffffffffffffffffffffffffffffffffffffff16610817909392919063ffffffff16565b8061058c90611c24565b90506104da565b506105a2816113888587610647565b50506105c56040518060600160405280602481526020016122e6602491396108a0565b6105ce82610939565b819550505050505092915050565b600060019050919050565b62030d4081565b61138881565b6060600067ffffffffffffffff81111561061157610610610d70565b5b60405190808252806020026020018201604052801561063f5781602001602082028036833780820191505090505b509050919050565b60008060006385572ffb60e01b876040516024016106659190611e14565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506106d0818587896109d2565b80935081945050507f9b877de93ea9895756e337442c657f95a34fc68e7eb988bdfa693d5be83016b68760000151886020015133848051906020012060405161071c9493929190611e36565b60405180910390a15094509492505050565b610736610ce9565b6000838390500361076457604051806020016040528062030d4067ffffffffffffffff168152509050610811565b6397a657c960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168383906107989190611ebf565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146107ee576040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282600490809261080193929190611f28565b81019061080e9190611f9f565b90505b92915050565b61089a846323b872dd60e01b85858560405160240161083893929190611fcc565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a0f565b50505050565b610936816040516024016108b49190612058565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ad6565b50565b6109cf8160405160240161094d919061144f565b6040516020818303038152906040527f27b7cf85000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ad6565b50565b6000805a838110610a05578381039050846040820482031115610a0457600080885160208a0160008a8af19250600191505b5b5094509492505050565b6000610a71826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610af09092919063ffffffff16565b9050600081511115610ad15780806020019051810190610a9191906120a6565b610ad0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac790612145565b60405180910390fd5b5b505050565b610aed81610ae5610b08610b29565b63ffffffff16565b50565b6060610aff8484600085610b34565b90509392505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b610cfc819050919050565b606082471015610b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b70906121d7565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ba29190612233565b60006040518083038185875af1925050503d8060008114610bdf576040519150601f19603f3d011682016040523d82523d6000602084013e610be4565b606091505b5091509150610bf587838387610c01565b92505050949350505050565b60608315610c63576000835103610c5b57610c1b85610c76565b610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5190612296565b60405180910390fd5b5b829050610c6e565b610c6d8383610c99565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610cac5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce09190612058565b60405180910390fd5b6040518060200160405280600081525090565b610d046122b6565b565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b610d3781610d1a565b8114610d4257600080fd5b50565b600081359050610d5481610d2e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610da882610d5f565b810181811067ffffffffffffffff82111715610dc757610dc6610d70565b5b80604052505050565b6000610dda610d06565b9050610de68282610d9f565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610e1557610e14610d70565b5b610e1e82610d5f565b9050602081019050919050565b82818337600083830152505050565b6000610e4d610e4884610dfa565b610dd0565b905082815260208101848484011115610e6957610e68610df5565b5b610e74848285610e2b565b509392505050565b600082601f830112610e9157610e90610df0565b5b8135610ea1848260208601610e3a565b91505092915050565b600067ffffffffffffffff821115610ec557610ec4610d70565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0682610edb565b9050919050565b610f1681610efb565b8114610f2157600080fd5b50565b600081359050610f3381610f0d565b92915050565b6000819050919050565b610f4c81610f39565b8114610f5757600080fd5b50565b600081359050610f6981610f43565b92915050565b600060408284031215610f8557610f84610d5a565b5b610f8f6040610dd0565b90506000610f9f84828501610f24565b6000830152506020610fb384828501610f5a565b60208301525092915050565b6000610fd2610fcd84610eaa565b610dd0565b90508083825260208201905060408402830185811115610ff557610ff4610ed6565b5b835b8181101561101e578061100a8882610f6f565b845260208401935050604081019050610ff7565b5050509392505050565b600082601f83011261103d5761103c610df0565b5b813561104d848260208601610fbf565b91505092915050565b600060a0828403121561106c5761106b610d5a565b5b61107660a0610dd0565b9050600082013567ffffffffffffffff81111561109657611095610deb565b5b6110a284828501610e7c565b600083015250602082013567ffffffffffffffff8111156110c6576110c5610deb565b5b6110d284828501610e7c565b602083015250604082013567ffffffffffffffff8111156110f6576110f5610deb565b5b61110284828501611028565b604083015250606061111684828501610f24565b606083015250608082013567ffffffffffffffff81111561113a57611139610deb565b5b61114684828501610e7c565b60808301525092915050565b6000806040838503121561116957611168610d10565b5b600061117785828601610d45565b925050602083013567ffffffffffffffff81111561119857611197610d15565b5b6111a485828601611056565b9150509250929050565b6111b781610f39565b82525050565b60006020820190506111d260008301846111ae565b92915050565b600080fd5b600060a082840312156111f3576111f26111d8565b5b81905092915050565b600061ffff82169050919050565b611213816111fc565b811461121e57600080fd5b50565b6000813590506112308161120a565b92915050565b600080600080608085870312156112505761124f610d10565b5b600085013567ffffffffffffffff81111561126e5761126d610d15565b5b61127a878288016111dd565b945050602061128b87828801611221565b935050604061129c87828801610f5a565b92505060606112ad87828801610f24565b91505092959194509250565b60008115159050919050565b6112ce816112b9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561130e5780820151818401526020810190506112f3565b60008484015250505050565b6000611325826112d4565b61132f81856112df565b935061133f8185602086016112f0565b61134881610d5f565b840191505092915050565b600060608201905061136860008301866112c5565b818103602083015261137a818561131a565b905061138960408301846111ae565b949350505050565b61139a81610efb565b82525050565b60006020820190506113b56000830184611391565b92915050565b600060a082840312156113d1576113d06111d8565b5b81905092915050565b600080604083850312156113f1576113f0610d10565b5b60006113ff85828601610d45565b925050602083013567ffffffffffffffff8111156114205761141f610d15565b5b61142c858286016113bb565b9150509250929050565b6000819050919050565b61144981611436565b82525050565b60006020820190506114646000830184611440565b92915050565b6000602082840312156114805761147f610d10565b5b600061148e84828501610d45565b91505092915050565b60006020820190506114ac60008301846112c5565b92915050565b6114bb81610d1a565b82525050565b60006020820190506114d660008301846114b2565b92915050565b6114e5816111fc565b82525050565b600060208201905061150060008301846114dc565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61153b81610efb565b82525050565b600061154d8383611532565b60208301905092915050565b6000602082019050919050565b600061157182611506565b61157b8185611511565b935061158683611522565b8060005b838110156115b757815161159e8882611541565b97506115a983611559565b92505060018101905061158a565b5085935050505092915050565b600060208201905081810360008301526115de8184611566565b905092915050565b6115ef81611436565b81146115fa57600080fd5b50565b60008135905061160c816115e6565b92915050565b600060a0828403121561162857611627610d5a565b5b61163260a0610dd0565b90506000611642848285016115fd565b600083015250602061165684828501610d45565b602083015250604082013567ffffffffffffffff81111561167a57611679610deb565b5b61168684828501610e7c565b604083015250606082013567ffffffffffffffff8111156116aa576116a9610deb565b5b6116b684828501610e7c565b606083015250608082013567ffffffffffffffff8111156116da576116d9610deb565b5b6116e684828501611028565b60808301525092915050565b60006116fe3683611612565b9050919050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261173157611730611705565b5b80840192508235915067ffffffffffffffff8211156117535761175261170a565b5b60208301925060018202360383131561176f5761176e61170f565b5b509250929050565b600061178383856112df565b9350611790838584610e2b565b61179983610d5f565b840190509392505050565b600060208201905081810360008301526117bf818486611777565b90509392505050565b6000602082840312156117de576117dd610d10565b5b60006117ec84828501610f5a565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611821576118206117ff565b5b83810192508235915060208301925067ffffffffffffffff821115611849576118486117f5565b5b60018202360383131561185f5761185e6117fa565b5b509250929050565b600082825260208201905092915050565b60006118848385611867565b9350611891838584610e2b565b61189a83610d5f565b840190509392505050565b600080833560016020038436030381126118c2576118c16117ff565b5b83810192508235915060208301925067ffffffffffffffff8211156118ea576118e96117f5565b5b604082023603831315611900576118ff6117fa565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b60006119326020840184610f24565b905092915050565b60006119496020840184610f5a565b905092915050565b61195a81610f39565b82525050565b604082016119716000830183611923565b61197e6000850182611532565b5061198c602083018361193a565b6119996020850182611951565b50505050565b60006119ab8383611960565b60408301905092915050565b600082905092915050565b6000604082019050919050565b60006119db8385611908565b93506119e682611919565b8060005b85811015611a1f576119fc82846119b7565b611a06888261199f565b9750611a11836119c2565b9250506001810190506119ea565b5085925050509392505050565b600060a08301611a3f6000840184611804565b8583036000870152611a52838284611878565b92505050611a636020840184611804565b8583036020870152611a76838284611878565b92505050611a8760408401846118a5565b8583036040870152611a9a8382846119cf565b92505050611aab6060840184611923565b611ab86060860182611532565b50611ac66080840184611804565b8583036080870152611ad9838284611878565b925050508091505092915050565b60006020820190508181036000830152611b018184611a2c565b905092915050565b60008083356001602003843603038112611b2657611b25611705565b5b80840192508235915067ffffffffffffffff821115611b4857611b4761170a565b5b602083019250604082023603831315611b6457611b6361170f565b5b509250929050565b600060408284031215611b8257611b81610d10565b5b6000611b9084828501610f6f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611bde57611bdd610d10565b5b6000611bec84828501610f24565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c2f82610f39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c6157611c60611bf5565b5b600182019050919050565b611c7581611436565b82525050565b611c8481610d1a565b82525050565b6000611c95826112d4565b611c9f8185611867565b9350611caf8185602086016112f0565b611cb881610d5f565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b604082016000820151611cf46000850182611532565b506020820151611d076020850182611951565b50505050565b6000611d198383611cde565b60408301905092915050565b6000602082019050919050565b6000611d3d82611cc3565b611d478185611908565b9350611d5283611cce565b8060005b83811015611d83578151611d6a8882611d0d565b9750611d7583611d25565b925050600181019050611d56565b5085935050505092915050565b600060a083016000830151611da86000860182611c6c565b506020830151611dbb6020860182611c7b565b5060408301518482036040860152611dd38282611c8a565b91505060608301518482036060860152611ded8282611c8a565b91505060808301518482036080860152611e078282611d32565b9150508091505092915050565b60006020820190508181036000830152611e2e8184611d90565b905092915050565b6000608082019050611e4b6000830187611440565b611e5860208301866114b2565b611e656040830185611391565b611e726060830184611440565b95945050505050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600082821b905092915050565b6000611ecb8383611e7b565b82611ed68135611e86565b92506004821015611f1657611f117fffffffff0000000000000000000000000000000000000000000000000000000083600403600802611eb2565b831692505b505092915050565b600080fd5b600080fd5b60008085851115611f3c57611f3b611f1e565b5b83861115611f4d57611f4c611f23565b5b6001850283019150848603905094509492505050565b600060208284031215611f7957611f78610d5a565b5b611f836020610dd0565b90506000611f9384828501610f5a565b60008301525092915050565b600060208284031215611fb557611fb4610d10565b5b6000611fc384828501611f63565b91505092915050565b6000606082019050611fe16000830186611391565b611fee6020830185611391565b611ffb60408301846111ae565b949350505050565b600081519050919050565b600082825260208201905092915050565b600061202a82612003565b612034818561200e565b93506120448185602086016112f0565b61204d81610d5f565b840191505092915050565b60006020820190508181036000830152612072818461201f565b905092915050565b612083816112b9565b811461208e57600080fd5b50565b6000815190506120a08161207a565b92915050565b6000602082840312156120bc576120bb610d10565b5b60006120ca84828501612091565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061212f602a8361200e565b915061213a826120d3565b604082019050919050565b6000602082019050818103600083015261215e81612122565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006121c160268361200e565b91506121cc82612165565b604082019050919050565b600060208201905081810360008301526121f0816121b4565b9050919050565b600081905092915050565b600061220d826112d4565b61221781856121f7565b93506122278185602086016112f0565b80840191505092915050565b600061223f8284612202565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612280601d8361200e565b915061228b8261224a565b602082019050919050565b600060208201905081810360008301526122af81612273565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfe4445563a20206363697053656e6428292063616c6c65642077697468206d736749643a20a26469706673582212200be7ebd5cbb2c384f803fbd72701c6f3a619c708d13504ef97a84026133c70b964736f6c63430008130033";

type MockCCIPRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCCIPRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCCIPRouter__factory extends ContractFactory {
  constructor(...args: MockCCIPRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockCCIPRouter> {
    return super.deploy(overrides || {}) as Promise<MockCCIPRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockCCIPRouter {
    return super.attach(address) as MockCCIPRouter;
  }
  override connect(signer: Signer): MockCCIPRouter__factory {
    return super.connect(signer) as MockCCIPRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCCIPRouterInterface {
    return new utils.Interface(_abi) as MockCCIPRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCCIPRouter {
    return new Contract(address, _abi, signerOrProvider) as MockCCIPRouter;
  }
}
