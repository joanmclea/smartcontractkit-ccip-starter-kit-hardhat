/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MockCCIPRouter,
  MockCCIPRouterInterface,
} from "../../../../../artifacts/contracts/mocks/MockRouter_CCIP.sol/MockCCIPRouter";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFeeTokenAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraArgsTag",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOffRamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "UnsupportedDestinationChain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offRamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_FOR_CALL_EXACT_CHECK",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getOnRamp",
    outputs: [
      {
        internalType: "address",
        name: "onRampAddress",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOffRamp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "gasForCallExactCheck",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "routeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506124c4806100206000396000f3fe6080604052600436106100865760003560e01c8063a48a905811610059578063a48a905814610174578063a8d87a3b146101b1578063d6be695a146101ee578063ee18e0d314610219578063fbca3b741461024457610086565b806320487ded1461008b5780633cf97983146100c857806383826b2b1461010757806396f4e9f914610144575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906112c0565b610281565b6040516100bf919061132b565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea91906113a4565b610289565b6040516100fe939291906114c1565b60405180910390f35b34801561011357600080fd5b5061012e600480360381019061012991906114ff565b610345565b60405161013b919061153f565b60405180910390f35b61015e60048036038101906101599190611579565b610351565b60405161016b91906115ee565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190611609565b61068e565b6040516101a8919061153f565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611609565b610699565b6040516101e59190611645565b60405180910390f35b3480156101fa57600080fd5b506102036106a7565b604051610210919061166f565b60405180910390f35b34801561022557600080fd5b5061022e6106ae565b60405161023b9190611699565b60405180910390f35b34801561025057600080fd5b5061026b60048036038101906102669190611609565b6106b4565b6040516102789190611772565b60405180910390f35b600092915050565b600060606000808473ffffffffffffffffffffffffffffffffffffffff163b14806102fa57506102f87f85572ffb000000000000000000000000000000000000000000000000000000008573ffffffffffffffffffffffffffffffffffffffff1661070790919063ffffffff16565b155b1561031f5760016000604051806020016040528060008152509092509250925061033b565b6103348761032c906118a0565b87878761072c565b9250925092505b9450945094915050565b60006001905092915050565b6000602082806000019061036591906118c2565b9050146103b95781806000019061037c91906118c2565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016103b0929190611952565b60405180910390fd5b60008280600001906103cb91906118c2565b8101906103d89190611976565b905073ffffffffffffffffffffffffffffffffffffffff80168111806103fe5750600a81105b156104505782806000019061041391906118c2565b6040517f370d875f000000000000000000000000000000000000000000000000000000008152600401610447929190611952565b60405180910390fd5b6000819050600061046f85806080019061046a91906118c2565b61081c565b6000015190506000856040516020016104889190611c95565b60405160208183030381529060405280519060200120905060006040518060a0016040528083815260200167de41ba4fc9d91ad967ffffffffffffffff168152602001336040516020016104dc9190611645565b604051602081830303815290604052815260200188806020019061050091906118c2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018880604001906105589190611cb7565b808060200260200160405190810160405280939291908181526020016000905b828210156105a8578484839050604002018036038101906105999190611d1a565b81526020019060010190610578565b5050505050815250905060005b8780604001906105c59190611cb7565b905081101561066e5761065d33868a80604001906105e39190611cb7565b858181106105f4576105f3611d47565b5b905060400201602001358b806040019061060e9190611cb7565b8681811061061f5761061e611d47565b5b90506040020160000160208101906106379190611d76565b73ffffffffffffffffffffffffffffffffffffffff16610905909392919063ffffffff16565b8061066790611dd2565b90506105b5565b5061067d81611388858761072c565b505050819550505050505092915050565b600060019050919050565b600063499602d29050919050565b62030d4081565b61138881565b6060600067ffffffffffffffff8111156106d1576106d0610ede565b5b6040519080825280602002602001820160405280156106ff5781602001602082028036833780820191505090505b509050919050565b60006107128361098e565b8015610724575061072383836109db565b5b905092915050565b600060606000806385572ffb60e01b8860405160240161074c9190611fc2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506107b98186888a6084610a9a565b8094508195508296505050507f9b877de93ea9895756e337442c657f95a34fc68e7eb988bdfa693d5be83016b6886000015189602001513384805190602001206040516108099493929190611fe4565b60405180910390a1509450945094915050565b610824610e61565b6000838390500361085257604051806020016040528062030d4067ffffffffffffffff1681525090506108ff565b6397a657c960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838390610886919061206d565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146108dc576040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828260049080926108ef939291906120d6565b8101906108fc919061214d565b90505b92915050565b610988846323b872dd60e01b8585856040516024016109269392919061217a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610bcd565b50505050565b60006109ba827f01ffc9a7000000000000000000000000000000000000000000000000000000006109db565b80156109d457506109d28263ffffffff60e01b6109db565b155b9050919050565b6000806301ffc9a760e01b836040516024016109f791906121c0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015610a82575060208210155b8015610a8e5750600081115b94505050505092915050565b6000606060008361ffff1667ffffffffffffffff811115610abe57610abd610ede565b5b6040519080825280601f01601f191660200182016040528015610af05781602001600182028036833780820191505090505b509150863b610b23577f0c3b563c0000000000000000000000000000000000000000000000000000000060005260046000fd5b5a85811015610b56577fafa32a2c0000000000000000000000000000000000000000000000000000000060005260046000fd5b85810390508660408204820311610b91577f37c3be290000000000000000000000000000000000000000000000000000000060005260046000fd5b5a6000808b5160208d0160008d8df194505a810392503d86811115610bb4578690505b808552806000602087013e505050955095509592505050565b6000610c2f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610c949092919063ffffffff16565b9050600081511115610c8f5780806020019051810190610c4f9190612207565b610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c85906122b7565b60405180910390fd5b5b505050565b6060610ca38484600085610cac565b90509392505050565b606082471015610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce890612349565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610d1a91906123a5565b60006040518083038185875af1925050503d8060008114610d57576040519150601f19603f3d011682016040523d82523d6000602084013e610d5c565b606091505b5091509150610d6d87838387610d79565b92505050949350505050565b60608315610ddb576000835103610dd357610d9385610dee565b610dd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc990612408565b60405180910390fd5b5b829050610de6565b610de58383610e11565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610e245781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e58919061246c565b60405180910390fd5b6040518060200160405280600081525090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b610ea581610e88565b8114610eb057600080fd5b50565b600081359050610ec281610e9c565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f1682610ecd565b810181811067ffffffffffffffff82111715610f3557610f34610ede565b5b80604052505050565b6000610f48610e74565b9050610f548282610f0d565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610f8357610f82610ede565b5b610f8c82610ecd565b9050602081019050919050565b82818337600083830152505050565b6000610fbb610fb684610f68565b610f3e565b905082815260208101848484011115610fd757610fd6610f63565b5b610fe2848285610f99565b509392505050565b600082601f830112610fff57610ffe610f5e565b5b813561100f848260208601610fa8565b91505092915050565b600067ffffffffffffffff82111561103357611032610ede565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107482611049565b9050919050565b61108481611069565b811461108f57600080fd5b50565b6000813590506110a18161107b565b92915050565b6000819050919050565b6110ba816110a7565b81146110c557600080fd5b50565b6000813590506110d7816110b1565b92915050565b6000604082840312156110f3576110f2610ec8565b5b6110fd6040610f3e565b9050600061110d84828501611092565b6000830152506020611121848285016110c8565b60208301525092915050565b600061114061113b84611018565b610f3e565b9050808382526020820190506040840283018581111561116357611162611044565b5b835b8181101561118c578061117888826110dd565b845260208401935050604081019050611165565b5050509392505050565b600082601f8301126111ab576111aa610f5e565b5b81356111bb84826020860161112d565b91505092915050565b600060a082840312156111da576111d9610ec8565b5b6111e460a0610f3e565b9050600082013567ffffffffffffffff81111561120457611203610f59565b5b61121084828501610fea565b600083015250602082013567ffffffffffffffff81111561123457611233610f59565b5b61124084828501610fea565b602083015250604082013567ffffffffffffffff81111561126457611263610f59565b5b61127084828501611196565b604083015250606061128484828501611092565b606083015250608082013567ffffffffffffffff8111156112a8576112a7610f59565b5b6112b484828501610fea565b60808301525092915050565b600080604083850312156112d7576112d6610e7e565b5b60006112e585828601610eb3565b925050602083013567ffffffffffffffff81111561130657611305610e83565b5b611312858286016111c4565b9150509250929050565b611325816110a7565b82525050565b6000602082019050611340600083018461131c565b92915050565b600080fd5b600060a0828403121561136157611360611346565b5b81905092915050565b600061ffff82169050919050565b6113818161136a565b811461138c57600080fd5b50565b60008135905061139e81611378565b92915050565b600080600080608085870312156113be576113bd610e7e565b5b600085013567ffffffffffffffff8111156113dc576113db610e83565b5b6113e88782880161134b565b94505060206113f98782880161138f565b935050604061140a878288016110c8565b925050606061141b87828801611092565b91505092959194509250565b60008115159050919050565b61143c81611427565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561147c578082015181840152602081019050611461565b60008484015250505050565b600061149382611442565b61149d818561144d565b93506114ad81856020860161145e565b6114b681610ecd565b840191505092915050565b60006060820190506114d66000830186611433565b81810360208301526114e88185611488565b90506114f7604083018461131c565b949350505050565b6000806040838503121561151657611515610e7e565b5b600061152485828601610eb3565b925050602061153585828601611092565b9150509250929050565b60006020820190506115546000830184611433565b92915050565b600060a082840312156115705761156f611346565b5b81905092915050565b600080604083850312156115905761158f610e7e565b5b600061159e85828601610eb3565b925050602083013567ffffffffffffffff8111156115bf576115be610e83565b5b6115cb8582860161155a565b9150509250929050565b6000819050919050565b6115e8816115d5565b82525050565b600060208201905061160360008301846115df565b92915050565b60006020828403121561161f5761161e610e7e565b5b600061162d84828501610eb3565b91505092915050565b61163f81611069565b82525050565b600060208201905061165a6000830184611636565b92915050565b61166981610e88565b82525050565b60006020820190506116846000830184611660565b92915050565b6116938161136a565b82525050565b60006020820190506116ae600083018461168a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116e981611069565b82525050565b60006116fb83836116e0565b60208301905092915050565b6000602082019050919050565b600061171f826116b4565b61172981856116bf565b9350611734836116d0565b8060005b8381101561176557815161174c88826116ef565b975061175783611707565b925050600181019050611738565b5085935050505092915050565b6000602082019050818103600083015261178c8184611714565b905092915050565b61179d816115d5565b81146117a857600080fd5b50565b6000813590506117ba81611794565b92915050565b600060a082840312156117d6576117d5610ec8565b5b6117e060a0610f3e565b905060006117f0848285016117ab565b600083015250602061180484828501610eb3565b602083015250604082013567ffffffffffffffff81111561182857611827610f59565b5b61183484828501610fea565b604083015250606082013567ffffffffffffffff81111561185857611857610f59565b5b61186484828501610fea565b606083015250608082013567ffffffffffffffff81111561188857611887610f59565b5b61189484828501611196565b60808301525092915050565b60006118ac36836117c0565b9050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126118df576118de6118b3565b5b80840192508235915067ffffffffffffffff821115611901576119006118b8565b5b60208301925060018202360383131561191d5761191c6118bd565b5b509250929050565b6000611931838561144d565b935061193e838584610f99565b61194783610ecd565b840190509392505050565b6000602082019050818103600083015261196d818486611925565b90509392505050565b60006020828403121561198c5761198b610e7e565b5b600061199a848285016110c8565b91505092915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126119cf576119ce6119ad565b5b83810192508235915060208301925067ffffffffffffffff8211156119f7576119f66119a3565b5b600182023603831315611a0d57611a0c6119a8565b5b509250929050565b600082825260208201905092915050565b6000611a328385611a15565b9350611a3f838584610f99565b611a4883610ecd565b840190509392505050565b60008083356001602003843603038112611a7057611a6f6119ad565b5b83810192508235915060208301925067ffffffffffffffff821115611a9857611a976119a3565b5b604082023603831315611aae57611aad6119a8565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6000611ae06020840184611092565b905092915050565b6000611af760208401846110c8565b905092915050565b611b08816110a7565b82525050565b60408201611b1f6000830183611ad1565b611b2c60008501826116e0565b50611b3a6020830183611ae8565b611b476020850182611aff565b50505050565b6000611b598383611b0e565b60408301905092915050565b600082905092915050565b6000604082019050919050565b6000611b898385611ab6565b9350611b9482611ac7565b8060005b85811015611bcd57611baa8284611b65565b611bb48882611b4d565b9750611bbf83611b70565b925050600181019050611b98565b5085925050509392505050565b600060a08301611bed60008401846119b2565b8583036000870152611c00838284611a26565b92505050611c1160208401846119b2565b8583036020870152611c24838284611a26565b92505050611c356040840184611a53565b8583036040870152611c48838284611b7d565b92505050611c596060840184611ad1565b611c6660608601826116e0565b50611c7460808401846119b2565b8583036080870152611c87838284611a26565b925050508091505092915050565b60006020820190508181036000830152611caf8184611bda565b905092915050565b60008083356001602003843603038112611cd457611cd36118b3565b5b80840192508235915067ffffffffffffffff821115611cf657611cf56118b8565b5b602083019250604082023603831315611d1257611d116118bd565b5b509250929050565b600060408284031215611d3057611d2f610e7e565b5b6000611d3e848285016110dd565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611d8c57611d8b610e7e565b5b6000611d9a84828501611092565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ddd826110a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e0f57611e0e611da3565b5b600182019050919050565b611e23816115d5565b82525050565b611e3281610e88565b82525050565b6000611e4382611442565b611e4d8185611a15565b9350611e5d81856020860161145e565b611e6681610ecd565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b604082016000820151611ea260008501826116e0565b506020820151611eb56020850182611aff565b50505050565b6000611ec78383611e8c565b60408301905092915050565b6000602082019050919050565b6000611eeb82611e71565b611ef58185611ab6565b9350611f0083611e7c565b8060005b83811015611f31578151611f188882611ebb565b9750611f2383611ed3565b925050600181019050611f04565b5085935050505092915050565b600060a083016000830151611f566000860182611e1a565b506020830151611f696020860182611e29565b5060408301518482036040860152611f818282611e38565b91505060608301518482036060860152611f9b8282611e38565b91505060808301518482036080860152611fb58282611ee0565b9150508091505092915050565b60006020820190508181036000830152611fdc8184611f3e565b905092915050565b6000608082019050611ff960008301876115df565b6120066020830186611660565b6120136040830185611636565b61202060608301846115df565b95945050505050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600082821b905092915050565b60006120798383612029565b826120848135612034565b925060048210156120c4576120bf7fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612060565b831692505b505092915050565b600080fd5b600080fd5b600080858511156120ea576120e96120cc565b5b838611156120fb576120fa6120d1565b5b6001850283019150848603905094509492505050565b60006020828403121561212757612126610ec8565b5b6121316020610f3e565b90506000612141848285016110c8565b60008301525092915050565b60006020828403121561216357612162610e7e565b5b600061217184828501612111565b91505092915050565b600060608201905061218f6000830186611636565b61219c6020830185611636565b6121a9604083018461131c565b949350505050565b6121ba81612034565b82525050565b60006020820190506121d560008301846121b1565b92915050565b6121e481611427565b81146121ef57600080fd5b50565b600081519050612201816121db565b92915050565b60006020828403121561221d5761221c610e7e565b5b600061222b848285016121f2565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006122a1602a83612234565b91506122ac82612245565b604082019050919050565b600060208201905081810360008301526122d081612294565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612333602683612234565b915061233e826122d7565b604082019050919050565b6000602082019050818103600083015261236281612326565b9050919050565b600081905092915050565b600061237f82611442565b6123898185612369565b935061239981856020860161145e565b80840191505092915050565b60006123b18284612374565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006123f2601d83612234565b91506123fd826123bc565b602082019050919050565b60006020820190508181036000830152612421816123e5565b9050919050565b600081519050919050565b600061243e82612428565b6124488185612234565b935061245881856020860161145e565b61246181610ecd565b840191505092915050565b600060208201905081810360008301526124868184612433565b90509291505056fea2646970667358221220e13f622099ba023eac9831b27962ef62adcd47e034de3946779a5baaee8a59e064736f6c63430008130033";

type MockCCIPRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCCIPRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCCIPRouter__factory extends ContractFactory {
  constructor(...args: MockCCIPRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockCCIPRouter> {
    return super.deploy(overrides || {}) as Promise<MockCCIPRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockCCIPRouter {
    return super.attach(address) as MockCCIPRouter;
  }
  override connect(signer: Signer): MockCCIPRouter__factory {
    return super.connect(signer) as MockCCIPRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCCIPRouterInterface {
    return new utils.Interface(_abi) as MockCCIPRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCCIPRouter {
    return new Contract(address, _abi, signerOrProvider) as MockCCIPRouter;
  }
}
